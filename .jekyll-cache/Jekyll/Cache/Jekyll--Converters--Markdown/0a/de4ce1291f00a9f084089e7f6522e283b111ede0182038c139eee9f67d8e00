I"™<h2 id="why">Why</h2>

<p>My previous attempt at a Github Pages website used <a href="https://vuejs.org/">Vue.js</a> to help simplify the construction process. Since the site was mostly meant to serve as a resume website (past project lists, employment history, education, etc.), it was mostly lists of objects. Using Vue.js meant I could construct my lists in JSON format. However, when I wanted to shift gears from a resume website to a blog, I knew that it would take too much time to continue to develop it in Vue.js. Eventually, after some googling, testing, and head-scratching I determined that the best solution is sometimes the simplest. In this case, that means Jekyll.</p>

<h2 id="what">What</h2>

<p>For this project I had a couple of objectives:</p>

<ol>
  <li>The website should be publishable on Github Pages</li>
  <li>The website should have blogging functionality</li>
  <li>The website should be easy to update</li>
  <li>Teh website should have a simple and pleasing theme</li>
</ol>

<p>In reviewing all of these requirements, I decided that a Jekyll site published to Github Pages would be the appropriate solution.</p>

<h2 id="how">How</h2>

<p>While it was not immediately aparent how to implement a Jekyll site (despite <a href="https://www.kiltandcode.com/2020/04/30/how-to-create-a-blog-using-jekyll-and-github-pages-on-windows/">this very sussinct tutorial</a>), it can actually be done in relatively few steps assuming you are starting from scratch.</p>

<h3 id="preparation">Preparation</h3>

<p>While I could feasibly do all of my development work from within Github, I find it better if I can see my changes live. In order to do that, I needed to prepare a few things:</p>

<ol>
  <li>
    <p>Download and install <a href="https://rubyinstaller.org/">Ruby+DevKit</a> using the instructions found <a href="https://www.kiltandcode.com/2020/04/30/how-to-create-a-blog-using-jekyll-and-github-pages-on-windows/#how-to-install-jekyll-on-windows">here</a></p>
  </li>
  <li>
    <p>Find a Jekyll theme that I liked on GitHub. There are many out there (including officially supported GH-pages themes) but I chose <a href="https://github.com/fongandrew/hydeout">Hydeout</a> for this blog. Once i had cloned the repository to my local machine (<code class="language-plaintext highlighter-rouge">git clone https://www.github.com/[user]/[repo].git</code>) I could then rename the containing folder to something more appropriate (in my case, change ‚Äúhydeout‚Äù to ‚Äúhome‚Äù).</p>
  </li>
  <li>
    <p>Ensure the theme works by running <code class="language-plaintext highlighter-rouge">jekyll serve</code> from within the project directory (./home in this case). After navigating to https://localhost:4000 I could see the theme‚Äôs website which means that it works.</p>
  </li>
</ol>

<h3 id="edit">Edit</h3>

<p>Now for the fun part! After I tested the site to ensure operability, I could start to make the blog my own. I took this time to change all personal information, remove demo blog posts, and update miscellaneous information. Some of the _config.yml and other settings that were changed and not so obvious (to me) were:</p>

<ul>
  <li>updating the theme to ‚Äújekyll-theme-hydeout‚Äù</li>
  <li>updating the budler dependency to version 2.4.1 in jekyll-theme-hydeout.gemspec with the following line: <code class="language-plaintext highlighter-rouge">spec.add_development_dependency "bundler", "~&gt; 2.1.4"</code>. For some reason, I was running into an issue where it expected version 1.* and all I had was version 2.*. While this is clearly a shortcut, it seems to work now so I‚Äôm going with it.</li>
  <li>When testing I need to make sure that I‚Äôm in the root folder (/Home/ in this case) before I run <code class="language-plaintext highlighter-rouge">jekyll serve</code>. Failing to do so will cause your build to fail. The same root folder is the folder that I needed to push to github (not the hydeout folder that is bundled with the repo after cloning).</li>
  <li>The tagline of the website is hidden in <em>/_includes/sidebar.html</em></li>
  <li>Turning off commenting with <strong>Disqus</strong> is done by commenting out the following code in the layout pages (i.e. <em>/_layouts/post.html</em>) <code class="language-plaintext highlighter-rouge">% include comments.html %</code></li>
</ul>

<h3 id="publishing">Publishing</h3>

<p>Moving my site to a public location was fairly straight forward since I‚Äôm already familiar with Github Pages. All that was required was to push my home directory (<em>/Home/*</em>) to my github repo under a gh-pages branch. Then, in the repo settings, make it public and tell Github to publish the gh-pages branch.</p>

<h2 id="final-thoughts">Final Thoughts</h2>

<p>While I‚Äôm clearly late to the party, I think Jekyll will be a great solution to my current need. I know there is tremendous room for growth and many areas where I can expand my learning (Ruby is chief among them), but I‚Äôm very happy with my shiny new blog for now.</p>

:ET